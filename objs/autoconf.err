

----------------------------------------
checking for C compiler


----------------------------------------
checking for gcc builtin atomic operations


----------------------------------------
checking for C99 variadic macros


----------------------------------------
checking for gcc variadic macros


----------------------------------------
checking for unistd.h


----------------------------------------
checking for inttypes.h


----------------------------------------
checking for limits.h


----------------------------------------
checking for sys/filio.h

objs/autotest.c:3:23: 致命错误：sys/filio.h：No such file or directory
编译中断。
----------


#include <sys/filio.h>

int main() {
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for sys/param.h


----------------------------------------
checking for sys/mount.h


----------------------------------------
checking for sys/statvfs.h


----------------------------------------
checking for crypt.h


----------------------------------------
checking for poll()


----------------------------------------
checking for /dev/poll

objs/autotest.c:4:25: 致命错误：sys/devpoll.h：No such file or directory
编译中断。
----------

#include <sys/types.h>
#include <unistd.h>
#include <sys/devpoll.h>

int main() {
    int  n, dp; struct dvpoll  dvp;
                  dp = 0;
                  dvp.dp_fds = NULL;
                  dvp.dp_nfds = 0;
                  dvp.dp_timeout = 0;
                  n = ioctl(dp, DP_POLL, &dvp);
                  if (n == -1) return 1;
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for kqueue

objs/autotest.c:4:23: 致命错误：sys/event.h：No such file or directory
编译中断。
----------

#include <sys/types.h>
#include <unistd.h>
#include <sys/event.h>

int main() {
    int kq; kq = kqueue();
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for crypt()

/tmp/ccp57HGR.o:autotest.c:(.text+0x1e): undefined reference to `_crypt'
collect2: ld 返回 1
----------

#include <sys/types.h>
#include <unistd.h>


int main() {
    crypt("test", "salt");;
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for crypt() in libcrypt


----------------------------------------
checking for F_READAHEAD

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:7:14: 错误：‘F_READAHEAD’未声明(在此函数内第一次使用)
objs/autotest.c:7:14: 附注：每个未声明的标识符在其出现的函数内只报告一次
----------

#include <sys/types.h>
#include <unistd.h>
#include <fcntl.h>

int main() {
    fcntl(0, F_READAHEAD, 1);;
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for posix_fadvise()


----------------------------------------
checking for O_DIRECT


----------------------------------------
checking for F_NOCACHE

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:7:14: 错误：‘F_NOCACHE’未声明(在此函数内第一次使用)
objs/autotest.c:7:14: 附注：每个未声明的标识符在其出现的函数内只报告一次
----------

#include <sys/types.h>
#include <unistd.h>
#include <fcntl.h>

int main() {
    fcntl(0, F_NOCACHE, 1);;
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for directio()

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:8:17: 错误：‘DIRECTIO_ON’未声明(在此函数内第一次使用)
objs/autotest.c:8:17: 附注：每个未声明的标识符在其出现的函数内只报告一次
----------

#include <sys/types.h>
#include <unistd.h>
#include <sys/types.h>
                  #include <sys/fcntl.h>

int main() {
    directio(0, DIRECTIO_ON);;
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for statfs()

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:9:20: 错误：‘fs’的存储大小未知
----------

#include <sys/types.h>
#include <unistd.h>
#include <sys/param.h>
                  #include <sys/mount.h>
                  

int main() {
    struct statfs  fs;
                  statfs(".", &fs);;
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for statvfs()


----------------------------------------
checking for dlopen()


----------------------------------------
checking for sched_yield()


----------------------------------------
checking for SO_SETFIB

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:7:31: 错误：‘SO_SETFIB’未声明(在此函数内第一次使用)
objs/autotest.c:7:31: 附注：每个未声明的标识符在其出现的函数内只报告一次
----------

#include <sys/types.h>
#include <unistd.h>
#include <sys/socket.h>

int main() {
    setsockopt(0, SOL_SOCKET, SO_SETFIB, NULL, 4);
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for SO_ACCEPTFILTER

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:7:31: 错误：‘SO_ACCEPTFILTER’未声明(在此函数内第一次使用)
objs/autotest.c:7:31: 附注：每个未声明的标识符在其出现的函数内只报告一次
----------

#include <sys/types.h>
#include <unistd.h>
#include <sys/socket.h>

int main() {
    setsockopt(0, SOL_SOCKET, SO_ACCEPTFILTER, NULL, 0);
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for TCP_DEFER_ACCEPT

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:9:32: 错误：‘TCP_DEFER_ACCEPT’未声明(在此函数内第一次使用)
objs/autotest.c:9:32: 附注：每个未声明的标识符在其出现的函数内只报告一次
----------

#include <sys/types.h>
#include <unistd.h>
#include <sys/socket.h>
                  #include <netinet/in.h>
                  #include <netinet/tcp.h>

int main() {
    setsockopt(0, IPPROTO_TCP, TCP_DEFER_ACCEPT, NULL, 0);
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for TCP_KEEPIDLE, TCP_KEEPINTVL, TCP_KEEPCNT

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:9:32: 错误：‘TCP_KEEPIDLE’未声明(在此函数内第一次使用)
objs/autotest.c:9:32: 附注：每个未声明的标识符在其出现的函数内只报告一次
objs/autotest.c:10:46: 错误：‘TCP_KEEPINTVL’未声明(在此函数内第一次使用)
objs/autotest.c:11:46: 错误：‘TCP_KEEPCNT’未声明(在此函数内第一次使用)
----------

#include <sys/types.h>
#include <unistd.h>
#include <sys/socket.h>
                  #include <netinet/in.h>
                  #include <netinet/tcp.h>

int main() {
    setsockopt(0, IPPROTO_TCP, TCP_KEEPIDLE, NULL, 0);
                  setsockopt(0, IPPROTO_TCP, TCP_KEEPINTVL, NULL, 0);
                  setsockopt(0, IPPROTO_TCP, TCP_KEEPCNT, NULL, 0);
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for TCP_INFO

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:9:31: 错误：‘sizeof’不能用于不完全的类型‘struct tcp_info’
objs/autotest.c:10:35: 错误：‘ti’的存储大小未知
objs/autotest.c:15:46: 错误：‘TCP_INFO’未声明(在此函数内第一次使用)
objs/autotest.c:15:46: 附注：每个未声明的标识符在其出现的函数内只报告一次
----------

#include <sys/types.h>
#include <unistd.h>
#include <sys/socket.h>
                  #include <netinet/in.h>
                  #include <netinet/tcp.h>

int main() {
    socklen_t optlen = sizeof(struct tcp_info);
                  struct tcp_info ti;
                  ti.tcpi_rtt = 0;
                  ti.tcpi_rttvar = 0;
                  ti.tcpi_snd_cwnd = 0;
                  ti.tcpi_rcv_space = 0;
                  getsockopt(0, IPPROTO_TCP, TCP_INFO, &ti, &optlen);
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for accept4()


----------------------------------------
checking for int size


----------------------------------------
checking for long size


----------------------------------------
checking for long long size


----------------------------------------
checking for void * size


----------------------------------------
checking for uint64_t


----------------------------------------
checking for sig_atomic_t


----------------------------------------
checking for sig_atomic_t size


----------------------------------------
checking for socklen_t


----------------------------------------
checking for in_addr_t


----------------------------------------
checking for in_port_t


----------------------------------------
checking for rlim_t


checking for uintptr_t

checking for system endianess

----------------------------------------
checking for size_t size


----------------------------------------
checking for off_t size


----------------------------------------
checking for time_t size


----------------------------------------
checking for setproctitle()

/tmp/ccxHfw9T.o:autotest.c:(.text+0x16): undefined reference to `_setproctitle'
collect2: ld 返回 1
----------

#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>

int main() {
    setproctitle("test");;
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for pread()


----------------------------------------
checking for pwrite()


----------------------------------------
checking for sys_nerr

144
----------------------------------------
checking for localtime_r()


----------------------------------------
checking for posix_memalign()


----------------------------------------
checking for memalign()


----------------------------------------
checking for mmap(MAP_ANON|MAP_SHARED)


----------------------------------------
checking for mmap("/dev/zero", MAP_SHARED)


----------------------------------------
checking for System V shared memory

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:9:51: 错误：‘SHM_R’未声明(在此函数内第一次使用)
objs/autotest.c:9:51: 附注：每个未声明的标识符在其出现的函数内只报告一次
objs/autotest.c:9:57: 错误：‘SHM_W’未声明(在此函数内第一次使用)
----------

#include <sys/types.h>
#include <unistd.h>
#include <sys/ipc.h>
                  #include <sys/shm.h>

int main() {
    int  id;
                  id = shmget(IPC_PRIVATE, 4096, (SHM_R|SHM_W|IPC_CREAT));
                  if (id == -1) return 1;
                  shmctl(id, IPC_RMID, NULL);;
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for POSIX semaphores


----------------------------------------
checking for struct msghdr.msg_control


----------------------------------------
checking for ioctl(FIONBIO)


----------------------------------------
checking for struct tm.tm_gmtoff

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:8:22: 错误：‘struct tm’没有名为‘tm_gmtoff’的成员
objs/autotest.c:9:40: 错误：‘struct tm’没有名为‘tm_gmtoff’的成员
----------

#include <sys/types.h>
#include <unistd.h>
#include <time.h>
                  #include <stdio.h>

int main() {
    struct tm  tm; tm.tm_gmtoff = 0;
                  printf("%d", (int) tm.tm_gmtoff);
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for struct dirent.d_namlen

objs/autotest.c: 在函数‘main’中:
objs/autotest.c:8:28: 错误：‘struct dirent’没有名为‘d_namlen’的成员
objs/autotest.c:9:41: 错误：‘struct dirent’没有名为‘d_namlen’的成员
----------

#include <sys/types.h>
#include <unistd.h>
#include <dirent.h>
                  #include <stdio.h>

int main() {
    struct dirent  dir; dir.d_namlen = 0;
                  printf("%d", (int) dir.d_namlen);
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c
----------

----------------------------------------
checking for struct dirent.d_type


----------------------------------------
checking for sysconf(_SC_NPROCESSORS_ONLN)


----------------------------------------
checking for openat(), fstatat()


----------------------------------------
checking for PCRE library


----------------------------------------
checking for PCRE JIT support


----------------------------------------
checking for system md library

objs/autotest.c:4:17: 致命错误：md5.h：No such file or directory
编译中断。
----------

#include <sys/types.h>
#include <unistd.h>
#include <md5.h>

int main() {
    MD5_CTX md5; MD5Init(&md5);
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c -lmd
----------

----------------------------------------
checking for system md5 library

objs/autotest.c:4:17: 致命错误：md5.h：No such file or directory
编译中断。
----------

#include <sys/types.h>
#include <unistd.h>
#include <md5.h>

int main() {
    MD5_CTX md5; MD5Init(&md5);
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c -lmd5
----------

----------------------------------------
checking for OpenSSL md5 crypto library


----------------------------------------
checking for sha1 in system md library

objs/autotest.c:4:17: 致命错误：sha.h：No such file or directory
编译中断。
----------

#include <sys/types.h>
#include <unistd.h>
#include <sha.h>

int main() {
    SHA_CTX sha1; SHA1_Init(&sha1);
    return 0;
}

----------
gcc -o objs/autotest objs/autotest.c -lmd
----------

----------------------------------------
checking for OpenSSL sha1 crypto library


----------------------------------------
checking for zlib library

